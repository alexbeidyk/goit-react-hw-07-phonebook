{"version":3,"sources":["Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","App.module.css","Components/Form/Form.module.css","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","redux/phoneBook/phoneBook-operations.js","Components/Form/Form.jsx","redux/phoneBook/phoneBook-selectors.js","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","filterContact","contacts","createReducer","state","payload","find","name","number","alert","filter","id","_","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBook","phoneBookReducer","devTools","process","axios","defaults","baseURL","Form","nameInputId","shortid","generate","numberInputId","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","htmlFor","label","type","input","placeholder","onChange","button","Component","connect","dispatch","post","then","data","catch","addContact","getLoading","getError","getFilter","getFilteredContacts","createSelector","allContacts","filtered","normalizedFilter","toLowerCase","includes","onDelete","delete","deleteContact","list","map","item","btn","onClick","target","App","getContact","color","height","width","timeout","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32a988d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__hFrkX\",\"item\":\"ContactsList_item__2UZOC\",\"name\":\"ContactsList_name__1Zsp4\",\"btn\":\"ContactsList_btn__J8vog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1aBlz\",\"label\":\"Filter_label__8XiVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-logo\":\"App_App-logo__2gped\",\"App-logo-spin\":\"App_App-logo-spin__2BH97\",\"App-header\":\"App_App-header__1X2m0\",\"App-link\":\"App_App-link__2g2Mv\",\"App\":\"App_App__3CyeH\",\"input\":\"App_input__3USKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__32soX\",\"label\":\"Form_label__3LODQ\",\"input\":\"Form_input__1_xcy\",\"button\":\"Form_button__1AjMC\"};","import { createAction } from '@reduxjs/toolkit';\n\n// экшены добавления контакта\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// экшены удаления контакта\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// єкшены получения контактов с бекенда\nexport const getContactRequest = createAction('contacts/getContactRequest');\nexport const getContactSuccess = createAction('contacts/getContactSuccess');\nexport const getContactError = createAction('contacts/getContactError');\n\n// экшен фильтра\nexport const filterContact = createAction('contacts/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n  filterContact,\n} from './phoneBook-actions';\n// import { deleteContact } from './phoneBook-operations';\n\n// редюсер на тулкит\nconst contacts = createReducer([], {\n  // добавляем в редюсер только  Success\n  // получение сохраненных контактов с бекенда\n  [getContactSuccess]: (state, { payload }) => payload,\n  // добавление\n  [addContactSuccess]: (state, { payload }) =>\n    state.find(\n      ({ name, number }) => name === payload.name || number === payload.number,\n    )\n      ? alert('This subscriber is already in contacts')\n      : [...state, payload],\n\n  // удаление\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// фильтр\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactRequest]: () => true,\n  [getContactSuccess]: () => false,\n  [getContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [getContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n  [getContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import axios from 'axios';\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n} from './phoneBook-actions';\n\n// ОПЕРАЦИЯ ВСЕГДА ИСПОЛЬЗУЕТ ТРИ ЭКШЕНА - REQUEST,SUCCESS,ERROR\n\naxios.defaults.baseURL = 'http://localhost:3000/';\n\nexport const addContact = ({ name, number }) => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', { name, number })\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport const getContact = () => dispatch => {\n  dispatch(getContactRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(getContactSuccess(data)))\n    .catch(error => dispatch(getContactError(error)));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phoneBook/phoneBook-operations';\nimport shortid from 'shortid';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  // ф-ция воода данных в любой инпут по атрибуту name\n  handleChange = event => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  // ф-ция сабмит на форме\n  handleSubmit = event => {\n    const { name, number } = this.state;\n    event.preventDefault();\n    if (!name || !number) {\n      alert('Enter name and phone number!');\n      return;\n    }\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  // очистка формы после сабмита\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, nameInputId, handleChange, numberInputId } = this;\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId} className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n            id={nameInputId}\n          />\n        </label>\n        <label htmlFor={numberInputId} className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            className={s.input}\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={handleChange}\n            id={numberInputId}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\n// state здесь не нужен, поэтому mapStateToProps не используем\n// используем только mapDispatchToProps\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import { createSelector } from '@reduxjs/toolkit';\n\n// селекторы всегда получают весь state\n\nexport const getLoading = state => state.phoneBook.loading;\n\nexport const getError = state => state.phoneBook.error;\n\nexport const getAllContacts = state => state.phoneBook.contacts;\n\nexport const getFilter = state => state.phoneBook.filter;\n\n// мемоизация\n// в createselector передаем те селекторы, от которых зависит мемоизированный селектор\n// если с предыдущего allContacts и filtered не изменились, то фильтр не произойдет, а из кеша вернутся старые данные\n\nexport const getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filtered) => {\n    const normalizedFilter = filtered.toLowerCase();\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { connect } from 'react-redux';\nimport {\n  // addContactRequest,\n  // addContactSuccess,\n  // addContactError,\n  deleteContact,\n  // filterContact,\n} from '../../redux/phoneBook/phoneBook-operations';\nimport { getFilteredContacts } from '../../redux/phoneBook/phoneBook-selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts = [], onDelete }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.name}>{name}:</span>{' '}\n          <span className={s.number}>{number}</span>\n          <button className={s.btn} onClick={() => onDelete(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { connect } from 'react-redux';\nimport {\n  // addContactRequest,\n  // addContactSuccess,\n  // addContactError,\n  // deleteContact,\n  filterContact,\n} from '../../redux/phoneBook/phoneBook-actions';\nimport { getFilter } from '../../redux/phoneBook/phoneBook-selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.filter}>\n      <label htmlFor=\"\" className={s.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search\"\n          className={s.input}\n          value={filter}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport s from './App.module.css';\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\nimport Filter from './Components/Filter';\nimport { getContact } from './redux/phoneBook/phoneBook-operations';\nimport { getLoading, getError } from './redux/phoneBook/phoneBook-selectors';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getContact();\n  }\n  render() {\n    const { loading, error } = this.props;\n    return (\n      <div className={s.App}>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        {loading && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#424141\"\n            height={60}\n            width={60}\n            timeout={3000}\n          />\n        )}\n        {error && <p>Oops! Something went wrong...</p>}\n        <ContactsList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: getLoading(state),\n  error: getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getContact: () => dispatch(getContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */} <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}